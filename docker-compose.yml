

services:
  web:
    build: .
    ports:
      - "8000:8000"
    #command: python manage.py runserver 0.0.0.0:8000
    command: sh -c "python manage.py collectstatic --noinput && gunicorn appdjtnt.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/code
      - static_volume:/code/static_root
    depends_on:
      db:
        condition: service_healthy
    # environment:
    #   - POSTGRES_DB=db_dj_tenant
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=123456.*
    env_file:
      - .env_dev
    restart: always
    networks:
      - webnet
  db:
    image: postgres:15
    volumes:
      - ../datosdjtnt:/var/lib/postgresql/data/
    # environment:
    #   - POSTGRES_DB=db_dj_tenant
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=123456.*
    env_file:
      - .env_dev
    ports:
      - "25432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - webnet
  nginx:
    image: nginx
    ports:
      - "81:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/code/static_root
    depends_on:
      - web
    networks:
      - webnet

networks:
  webnet:

volumes:
  static_volume: